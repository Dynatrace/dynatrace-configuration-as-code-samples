{
  "name": "{{ .name }}",
  "frequencyMin": "{{ .frequencyMin }}",
  "enabled": true,
  "type": "HTTP",
  "script": {
    "version": "1.0",
    "requests": [
      {
        "description": "{{ .description }}",
        "url": "{{ .url }}",
        "method": "GET",
        "requestBody": "",
        "validation": {
          "rules": [
            {
              "value": ">=400",
              "passIfFound": false,
              "type": "regexConstraint"
            }
          ]
        },
        "configuration": {
          "requestHeaders": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ],
          "acceptAnyCertificate": false,
          "followRedirects": true
        }
      },
      {
        "description": "invoke",
        "url": "{{ .url }}/api/invoke?url=https://www.amazon.com&sleep=1000",
        "method": "GET",
        "requestBody": "",
        "validation": {
          "rules": [
            {
              "value": ">=400",
              "passIfFound": false,
              "type": "regexConstraint"
            }
          ]
        },
        "configuration": {
          "requestHeaders": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ],
          "acceptAnyCertificate": false,
          "followRedirects": true
        }
      },
      {
        "description": "version",
        "url": "{{ .url }}/api/version?sleep=1000",
        "method": "GET",
        "requestBody": "",
        "validation": {
          "rules": [
            {
              "value": ">=400",
              "passIfFound": false,
              "type": "regexConstraint"
            }
          ]
        },
        "configuration": {
          "requestHeaders": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ],
          "acceptAnyCertificate": false,
          "followRedirects": true
        }
      }
    ]
  },
  "manuallyAssignedApps": ["{{ .applicationId }}"],
  "locations": {{ .locations }},
  "anomalyDetection": {
    "outageHandling": {
      "globalOutage": false,
      "localOutage": true,
      "localOutagePolicy": {
        "affectedLocations": 1,
        "consecutiveRuns": 3
      }
    },
    "loadingTimeThresholds": {
      "enabled": false,
      "thresholds": [
        {
          "type": "TOTAL",
          "valueMs": 0
        }
      ]
    }
  },
  "tags": []
}
